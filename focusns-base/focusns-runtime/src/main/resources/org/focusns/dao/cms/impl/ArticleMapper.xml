<?xml version="1.0" encoding="UTF-8" ?>
<!--
  #%L
  focusns-runtime
  %%
  Copyright (C) 2011 - 2013 FocusSNS
  %%
  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU Lesser General Public License as 
  published by the Free Software Foundation, either version 2.1 of the 
  License, or (at your option) any later version.
  
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Lesser Public License for more details.
  
  You should have received a copy of the GNU General Lesser Public 
  License along with this program.  If not, see
  <http://www.gnu.org/licenses/lgpl-2.1.html>.
  #L%
  -->


<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.focusns.dao.cms.ArticleDao">

	<resultMap id="BaseResultMap" type="org.focusns.model.cms.Article">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="title" property="title" jdbcType="VARCHAR" />
        <result column="summary" property="summary" jdbcType="VARCHAR" />
        <result column="content" property="content" jdbcType="VARCHAR" />
        <result column="from" property="from" jdbcType="VARCHAR" />
        <result column="link" property="link" jdbcType="VARCHAR" />
        <result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
		<result column="modify_at" property="modifyAt" jdbcType="TIMESTAMP" />
        <result column="remove_at" property="removeAt" jdbcType="TIMESTAMP" />
        <result column="create_by_id" property="createById" jdbcType="BIGINT" />
        <result column="modify_by_id" property="modifyById" jdbcType="BIGINT" />
        <result column="remove_by_id" property="removeById" jdbcType="BIGINT" />
        <result column="category_id" property="categoryId" jdbcType="BIGINT" />
	</resultMap>
	
	<insert id="insert" parameterType="org.focusns.model.cms.Article">
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
			select last_insert_id()
		</selectKey>
        insert into tb_article (title, summary, content, create_at, modify_at, remove_at, create_by_id, modify_by_id, remove_by_id, category_id)
        values (#{title}, #{summary}, #{content}, #{createAt}, #{modifyAt}, #{removeAt}, #{createById}, #{modifyById}, #{removeById}, #{categoryId})
	</insert>

	<select id="select" parameterType="java.lang.Long" resultMap="BaseResultMap">
		select * from tb_article where id = #{id}
	</select>
	
	<update id="update" parameterType="org.focusns.model.cms.Article">
		update tb_article
		<set>
			<if test="title != null" >
		        title = #{title},
			</if>
            <if test="summary != null" >
                title = #{summary},
            </if>
			<if test="content != null" >
		        content = #{content},
			</if>
            <if test="craeteAt != null" >
		        create_at = #{createAt},
			</if>
            <if test="modifyAt != null" >
		        modify_at = #{modifyAt},
			</if>
            <if test="removeAt != null" >
                remove_at = #{removeAt},
            </if>
            <if test="createById > 0" >
                create_by_id = #{createById},
            </if>
            <if test="modifyById > 0" >
                modify_by_id = #{modifyById},
            </if>
            <if test="removeById > 0" >
                remove_by_id = #{removeById},
            </if>
            <if test="categoryId > 0" >
                category_id = #{categoryId},
            </if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete" parameterType="java.lang.Long">
		delete from tb_article where id = #{id}
	</delete>

    <sql id="fetchByProjectAndCategoryIdSql">
        <choose>
            <when test="categoryId > 0">
                from tb_article a, tb_blog_category b
                where a.category_id = b.id and b.id = #{categoryId}
                order by a.create_at desc
            </when>
            <otherwise>
                from tb_article a
                where a.project_id = #{projectId}
                order by a.create_at desc
            </otherwise>
        </choose>
    </sql>
    <select id="fetchByProjectAndCategoryId" parameterType="java.util.Map" resultMap="BaseResultMap">
        select * <include refid="fetchByProjectAndCategoryIdSql"/>
    </select>
    <select id="fetchByProjectAndCategoryIdCount" parameterType="java.util.Map" resultType="java.lang.Long">
        select count(1) <include refid="fetchByProjectAndCategoryIdSql"/>
    </select>
</mapper>